/*
 * generated by Xtext 2.9.1
 */
grammar InternalGramaticajmeter;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package co.edu.uniandes.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package co.edu.uniandes.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import co.edu.uniandes.services.GramaticajmeterGrammarAccess;

}
@parser::members {
	private GramaticajmeterGrammarAccess grammarAccess;

	public void setGrammarAccess(GramaticajmeterGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleJMeter
entryRuleJMeter
:
{ before(grammarAccess.getJMeterRule()); }
	 ruleJMeter
{ after(grammarAccess.getJMeterRule()); } 
	 EOF 
;

// Rule JMeter
ruleJMeter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJMeterAccess().getGroup()); }
		(rule__JMeter__Group__0)
		{ after(grammarAccess.getJMeterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArchitectureResults
entryRuleArchitectureResults
:
{ before(grammarAccess.getArchitectureResultsRule()); }
	 ruleArchitectureResults
{ after(grammarAccess.getArchitectureResultsRule()); } 
	 EOF 
;

// Rule ArchitectureResults
ruleArchitectureResults 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArchitectureResultsAccess().getGroup()); }
		(rule__ArchitectureResults__Group__0)
		{ after(grammarAccess.getArchitectureResultsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHeader
entryRuleHeader
:
{ before(grammarAccess.getHeaderRule()); }
	 ruleHeader
{ after(grammarAccess.getHeaderRule()); } 
	 EOF 
;

// Rule Header
ruleHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHeaderAccess().getGroup()); }
		(rule__Header__Group__0)
		{ after(grammarAccess.getHeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResults
entryRuleResults
:
{ before(grammarAccess.getResultsRule()); }
	 ruleResults
{ after(grammarAccess.getResultsRule()); } 
	 EOF 
;

// Rule Results
ruleResults 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResultsAccess().getGroup()); }
		(rule__Results__Group__0)
		{ after(grammarAccess.getResultsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumnHeader
entryRuleColumnHeader
:
{ before(grammarAccess.getColumnHeaderRule()); }
	 ruleColumnHeader
{ after(grammarAccess.getColumnHeaderRule()); } 
	 EOF 
;

// Rule ColumnHeader
ruleColumnHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnHeaderAccess().getAlternatives()); }
		(rule__ColumnHeader__Alternatives)
		{ after(grammarAccess.getColumnHeaderAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResult
entryRuleResult
:
{ before(grammarAccess.getResultRule()); }
	 ruleResult
{ after(grammarAccess.getResultRule()); } 
	 EOF 
;

// Rule Result
ruleResult 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResultAccess().getValueAssignment()); }
		(rule__Result__ValueAssignment)
		{ after(grammarAccess.getResultAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHeaderJMeter
entryRuleHeaderJMeter
:
{ before(grammarAccess.getHeaderJMeterRule()); }
	 ruleHeaderJMeter
{ after(grammarAccess.getHeaderJMeterRule()); } 
	 EOF 
;

// Rule HeaderJMeter
ruleHeaderJMeter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHeaderJMeterAccess().getGroup()); }
		(rule__HeaderJMeter__Group__0)
		{ after(grammarAccess.getHeaderJMeterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumnHeaderJMeter
entryRuleColumnHeaderJMeter
:
{ before(grammarAccess.getColumnHeaderJMeterRule()); }
	 ruleColumnHeaderJMeter
{ after(grammarAccess.getColumnHeaderJMeterRule()); } 
	 EOF 
;

// Rule ColumnHeaderJMeter
ruleColumnHeaderJMeter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnHeaderJMeterAccess().getAlternatives()); }
		(rule__ColumnHeaderJMeter__Alternatives)
		{ after(grammarAccess.getColumnHeaderJMeterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnHeader__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnHeaderAccess().getStimulusKeyword_0()); }
		'stimulus'
		{ after(grammarAccess.getColumnHeaderAccess().getStimulusKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderAccess().getMinresponsetimeKeyword_1()); }
		'minresponsetime'
		{ after(grammarAccess.getColumnHeaderAccess().getMinresponsetimeKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderAccess().getMaxresponsetimeKeyword_2()); }
		'maxresponsetime'
		{ after(grammarAccess.getColumnHeaderAccess().getMaxresponsetimeKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderAccess().getAveragetimeKeyword_3()); }
		'averagetime'
		{ after(grammarAccess.getColumnHeaderAccess().getAveragetimeKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderAccess().getErrorcountKeyword_4()); }
		'errorcount'
		{ after(grammarAccess.getColumnHeaderAccess().getErrorcountKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderAccess().getTotalreqKeyword_5()); }
		'totalreq'
		{ after(grammarAccess.getColumnHeaderAccess().getTotalreqKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderAccess().getThreadsKeyword_6()); }
		'threads'
		{ after(grammarAccess.getColumnHeaderAccess().getThreadsKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderAccess().getAveragelatencyKeyword_7()); }
		'averagelatency'
		{ after(grammarAccess.getColumnHeaderAccess().getAveragelatencyKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderAccess().getMinlatencyKeyword_8()); }
		'minlatency'
		{ after(grammarAccess.getColumnHeaderAccess().getMinlatencyKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderAccess().getMaxlatencyKeyword_9()); }
		'maxlatency'
		{ after(grammarAccess.getColumnHeaderAccess().getMaxlatencyKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderAccess().getPercentageerrorKeyword_10()); }
		'percentageerror'
		{ after(grammarAccess.getColumnHeaderAccess().getPercentageerrorKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderAccess().getThroughputKeyword_11()); }
		'throughput'
		{ after(grammarAccess.getColumnHeaderAccess().getThroughputKeyword_11()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnHeaderJMeter__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnHeaderJMeterAccess().getTimeStampKeyword_0()); }
		'timeStamp'
		{ after(grammarAccess.getColumnHeaderJMeterAccess().getTimeStampKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderJMeterAccess().getElapsedKeyword_1()); }
		'elapsed'
		{ after(grammarAccess.getColumnHeaderJMeterAccess().getElapsedKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderJMeterAccess().getLabelKeyword_2()); }
		'label'
		{ after(grammarAccess.getColumnHeaderJMeterAccess().getLabelKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderJMeterAccess().getResponseCodeKeyword_3()); }
		'responseCode'
		{ after(grammarAccess.getColumnHeaderJMeterAccess().getResponseCodeKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderJMeterAccess().getResponseMessageKeyword_4()); }
		'responseMessage'
		{ after(grammarAccess.getColumnHeaderJMeterAccess().getResponseMessageKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderJMeterAccess().getThreadNameKeyword_5()); }
		'threadName'
		{ after(grammarAccess.getColumnHeaderJMeterAccess().getThreadNameKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderJMeterAccess().getDataTypeKeyword_6()); }
		'dataType'
		{ after(grammarAccess.getColumnHeaderJMeterAccess().getDataTypeKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderJMeterAccess().getSuccessKeyword_7()); }
		'success'
		{ after(grammarAccess.getColumnHeaderJMeterAccess().getSuccessKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderJMeterAccess().getBytesKeyword_8()); }
		'bytes'
		{ after(grammarAccess.getColumnHeaderJMeterAccess().getBytesKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderJMeterAccess().getGrpThreadsKeyword_9()); }
		'grpThreads'
		{ after(grammarAccess.getColumnHeaderJMeterAccess().getGrpThreadsKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderJMeterAccess().getAllThreadsKeyword_10()); }
		'allThreads'
		{ after(grammarAccess.getColumnHeaderJMeterAccess().getAllThreadsKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getColumnHeaderJMeterAccess().getLatencyKeyword_11()); }
		'Latency'
		{ after(grammarAccess.getColumnHeaderJMeterAccess().getLatencyKeyword_11()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JMeter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JMeter__Group__0__Impl
	rule__JMeter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMeter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJMeterAccess().getArchitectureResultsAssignment_0()); }
	(rule__JMeter__ArchitectureResultsAssignment_0)
	{ after(grammarAccess.getJMeterAccess().getArchitectureResultsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JMeter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JMeter__Group__1__Impl
	rule__JMeter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JMeter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJMeterAccess().getGroup_1()); }
	(rule__JMeter__Group_1__0)*
	{ after(grammarAccess.getJMeterAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JMeter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JMeter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMeter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJMeterAccess().getNLTerminalRuleCall_2()); }
	(RULE_NL)?
	{ after(grammarAccess.getJMeterAccess().getNLTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JMeter__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JMeter__Group_1__0__Impl
	rule__JMeter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JMeter__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJMeterAccess().getNLTerminalRuleCall_1_0()); }
	RULE_NL
	{ after(grammarAccess.getJMeterAccess().getNLTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JMeter__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JMeter__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JMeter__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJMeterAccess().getArchitectureResultsAssignment_1_1()); }
	(rule__JMeter__ArchitectureResultsAssignment_1_1)
	{ after(grammarAccess.getJMeterAccess().getArchitectureResultsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArchitectureResults__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArchitectureResults__Group__0__Impl
	rule__ArchitectureResults__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureResultsAccess().getArchitectureKeyword_0()); }
	'architecture='
	{ after(grammarAccess.getArchitectureResultsAccess().getArchitectureKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArchitectureResults__Group__1__Impl
	rule__ArchitectureResults__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureResultsAccess().getArchitectureAssignment_1()); }
	(rule__ArchitectureResults__ArchitectureAssignment_1)
	{ after(grammarAccess.getArchitectureResultsAccess().getArchitectureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArchitectureResults__Group__2__Impl
	rule__ArchitectureResults__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureResultsAccess().getNLTerminalRuleCall_2()); }
	RULE_NL
	{ after(grammarAccess.getArchitectureResultsAccess().getNLTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArchitectureResults__Group__3__Impl
	rule__ArchitectureResults__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureResultsAccess().getHeaderAssignment_3()); }
	(rule__ArchitectureResults__HeaderAssignment_3)
	{ after(grammarAccess.getArchitectureResultsAccess().getHeaderAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArchitectureResults__Group__4__Impl
	rule__ArchitectureResults__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureResultsAccess().getNLTerminalRuleCall_4()); }
	RULE_NL
	{ after(grammarAccess.getArchitectureResultsAccess().getNLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArchitectureResults__Group__5__Impl
	rule__ArchitectureResults__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureResultsAccess().getResultsAssignment_5()); }
	(rule__ArchitectureResults__ResultsAssignment_5)
	{ after(grammarAccess.getArchitectureResultsAccess().getResultsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArchitectureResults__Group__6__Impl
	rule__ArchitectureResults__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureResultsAccess().getGroup_6()); }
	(rule__ArchitectureResults__Group_6__0)*
	{ after(grammarAccess.getArchitectureResultsAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArchitectureResults__Group__7__Impl
	rule__ArchitectureResults__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureResultsAccess().getNLTerminalRuleCall_7()); }
	RULE_NL
	{ after(grammarAccess.getArchitectureResultsAccess().getNLTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArchitectureResults__Group__8__Impl
	rule__ArchitectureResults__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureResultsAccess().getHeaderJMeterAssignment_8()); }
	(rule__ArchitectureResults__HeaderJMeterAssignment_8)
	{ after(grammarAccess.getArchitectureResultsAccess().getHeaderJMeterAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArchitectureResults__Group__9__Impl
	rule__ArchitectureResults__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureResultsAccess().getNLTerminalRuleCall_9()); }
	RULE_NL
	{ after(grammarAccess.getArchitectureResultsAccess().getNLTerminalRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArchitectureResults__Group__10__Impl
	rule__ArchitectureResults__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureResultsAccess().getResultsJMeterAssignment_10()); }
	(rule__ArchitectureResults__ResultsJMeterAssignment_10)
	{ after(grammarAccess.getArchitectureResultsAccess().getResultsJMeterAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArchitectureResults__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureResultsAccess().getGroup_11()); }
	(rule__ArchitectureResults__Group_11__0)*
	{ after(grammarAccess.getArchitectureResultsAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArchitectureResults__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArchitectureResults__Group_6__0__Impl
	rule__ArchitectureResults__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureResultsAccess().getNLTerminalRuleCall_6_0()); }
	RULE_NL
	{ after(grammarAccess.getArchitectureResultsAccess().getNLTerminalRuleCall_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArchitectureResults__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureResultsAccess().getResultsAssignment_6_1()); }
	(rule__ArchitectureResults__ResultsAssignment_6_1)
	{ after(grammarAccess.getArchitectureResultsAccess().getResultsAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArchitectureResults__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArchitectureResults__Group_11__0__Impl
	rule__ArchitectureResults__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureResultsAccess().getNLTerminalRuleCall_11_0()); }
	RULE_NL
	{ after(grammarAccess.getArchitectureResultsAccess().getNLTerminalRuleCall_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArchitectureResults__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureResultsAccess().getResultsJMeterAssignment_11_1()); }
	(rule__ArchitectureResults__ResultsJMeterAssignment_11_1)
	{ after(grammarAccess.getArchitectureResultsAccess().getResultsJMeterAssignment_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Header__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__0__Impl
	rule__Header__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getHeaderAssignment_0()); }
	(rule__Header__HeaderAssignment_0)
	{ after(grammarAccess.getHeaderAccess().getHeaderAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getGroup_1()); }
	(rule__Header__Group_1__0)*
	{ after(grammarAccess.getHeaderAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Header__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group_1__0__Impl
	rule__Header__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
	{ after(grammarAccess.getHeaderAccess().getCOMMATerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getHeaderAssignment_1_1()); }
	(rule__Header__HeaderAssignment_1_1)
	{ after(grammarAccess.getHeaderAccess().getHeaderAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Results__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Results__Group__0__Impl
	rule__Results__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Results__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultsAccess().getResultAssignment_0()); }
	(rule__Results__ResultAssignment_0)
	{ after(grammarAccess.getResultsAccess().getResultAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Results__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Results__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Results__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultsAccess().getGroup_1()); }
	(rule__Results__Group_1__0)*
	{ after(grammarAccess.getResultsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Results__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Results__Group_1__0__Impl
	rule__Results__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Results__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultsAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
	{ after(grammarAccess.getResultsAccess().getCOMMATerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Results__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Results__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Results__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultsAccess().getResultAssignment_1_1()); }
	(rule__Results__ResultAssignment_1_1)
	{ after(grammarAccess.getResultsAccess().getResultAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HeaderJMeter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HeaderJMeter__Group__0__Impl
	rule__HeaderJMeter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderJMeter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderJMeterAccess().getHeaderAssignment_0()); }
	(rule__HeaderJMeter__HeaderAssignment_0)
	{ after(grammarAccess.getHeaderJMeterAccess().getHeaderAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderJMeter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HeaderJMeter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderJMeter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderJMeterAccess().getGroup_1()); }
	(rule__HeaderJMeter__Group_1__0)*
	{ after(grammarAccess.getHeaderJMeterAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HeaderJMeter__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HeaderJMeter__Group_1__0__Impl
	rule__HeaderJMeter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderJMeter__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderJMeterAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
	{ after(grammarAccess.getHeaderJMeterAccess().getCOMMATerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderJMeter__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HeaderJMeter__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderJMeter__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderJMeterAccess().getHeaderAssignment_1_1()); }
	(rule__HeaderJMeter__HeaderAssignment_1_1)
	{ after(grammarAccess.getHeaderJMeterAccess().getHeaderAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JMeter__ArchitectureResultsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJMeterAccess().getArchitectureResultsArchitectureResultsParserRuleCall_0_0()); }
		ruleArchitectureResults
		{ after(grammarAccess.getJMeterAccess().getArchitectureResultsArchitectureResultsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JMeter__ArchitectureResultsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJMeterAccess().getArchitectureResultsArchitectureResultsParserRuleCall_1_1_0()); }
		ruleArchitectureResults
		{ after(grammarAccess.getJMeterAccess().getArchitectureResultsArchitectureResultsParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__ArchitectureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArchitectureResultsAccess().getArchitectureSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getArchitectureResultsAccess().getArchitectureSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__HeaderAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArchitectureResultsAccess().getHeaderHeaderParserRuleCall_3_0()); }
		ruleHeader
		{ after(grammarAccess.getArchitectureResultsAccess().getHeaderHeaderParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__ResultsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArchitectureResultsAccess().getResultsResultsParserRuleCall_5_0()); }
		ruleResults
		{ after(grammarAccess.getArchitectureResultsAccess().getResultsResultsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__ResultsAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArchitectureResultsAccess().getResultsResultsParserRuleCall_6_1_0()); }
		ruleResults
		{ after(grammarAccess.getArchitectureResultsAccess().getResultsResultsParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__HeaderJMeterAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArchitectureResultsAccess().getHeaderJMeterHeaderJMeterParserRuleCall_8_0()); }
		ruleHeaderJMeter
		{ after(grammarAccess.getArchitectureResultsAccess().getHeaderJMeterHeaderJMeterParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__ResultsJMeterAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArchitectureResultsAccess().getResultsJMeterResultsParserRuleCall_10_0()); }
		ruleResults
		{ after(grammarAccess.getArchitectureResultsAccess().getResultsJMeterResultsParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureResults__ResultsJMeterAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArchitectureResultsAccess().getResultsJMeterResultsParserRuleCall_11_1_0()); }
		ruleResults
		{ after(grammarAccess.getArchitectureResultsAccess().getResultsJMeterResultsParserRuleCall_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__HeaderAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeaderAccess().getHeaderColumnHeaderParserRuleCall_0_0()); }
		ruleColumnHeader
		{ after(grammarAccess.getHeaderAccess().getHeaderColumnHeaderParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__HeaderAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeaderAccess().getHeaderColumnHeaderParserRuleCall_1_1_0()); }
		ruleColumnHeader
		{ after(grammarAccess.getHeaderAccess().getHeaderColumnHeaderParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Results__ResultAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultsAccess().getResultResultParserRuleCall_0_0()); }
		ruleResult
		{ after(grammarAccess.getResultsAccess().getResultResultParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Results__ResultAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultsAccess().getResultResultParserRuleCall_1_1_0()); }
		ruleResult
		{ after(grammarAccess.getResultsAccess().getResultResultParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getResultAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderJMeter__HeaderAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeaderJMeterAccess().getHeaderColumnHeaderJMeterParserRuleCall_0_0()); }
		ruleColumnHeaderJMeter
		{ after(grammarAccess.getHeaderJMeterAccess().getHeaderColumnHeaderJMeterParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderJMeter__HeaderAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeaderJMeterAccess().getHeaderColumnHeaderJMeterParserRuleCall_1_1_0()); }
		ruleColumnHeaderJMeter
		{ after(grammarAccess.getHeaderJMeterAccess().getHeaderColumnHeaderJMeterParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_COMMA : ',';

RULE_NL : '\r'? '\n';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
