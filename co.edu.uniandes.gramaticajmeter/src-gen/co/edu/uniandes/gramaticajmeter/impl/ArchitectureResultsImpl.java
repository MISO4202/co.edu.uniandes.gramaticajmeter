/**
 * generated by Xtext 2.9.1
 */
package co.edu.uniandes.gramaticajmeter.impl;

import co.edu.uniandes.gramaticajmeter.ArchitectureResults;
import co.edu.uniandes.gramaticajmeter.GramaticajmeterPackage;
import co.edu.uniandes.gramaticajmeter.Header;
import co.edu.uniandes.gramaticajmeter.HeaderJMeter;
import co.edu.uniandes.gramaticajmeter.Results;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Architecture Results</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link co.edu.uniandes.gramaticajmeter.impl.ArchitectureResultsImpl#getArchitecture <em>Architecture</em>}</li>
 *   <li>{@link co.edu.uniandes.gramaticajmeter.impl.ArchitectureResultsImpl#getHeader <em>Header</em>}</li>
 *   <li>{@link co.edu.uniandes.gramaticajmeter.impl.ArchitectureResultsImpl#getResults <em>Results</em>}</li>
 *   <li>{@link co.edu.uniandes.gramaticajmeter.impl.ArchitectureResultsImpl#getHeaderJMeter <em>Header JMeter</em>}</li>
 *   <li>{@link co.edu.uniandes.gramaticajmeter.impl.ArchitectureResultsImpl#getResultsJMeter <em>Results JMeter</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class ArchitectureResultsImpl extends MinimalEObjectImpl.Container implements ArchitectureResults
{
  /**
   * The default value of the '{@link #getArchitecture() <em>Architecture</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArchitecture()
   * @generated
   * @ordered
   */
  protected static final String ARCHITECTURE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getArchitecture() <em>Architecture</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArchitecture()
   * @generated
   * @ordered
   */
  protected String architecture = ARCHITECTURE_EDEFAULT;

  /**
   * The cached value of the '{@link #getHeader() <em>Header</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHeader()
   * @generated
   * @ordered
   */
  protected Header header;

  /**
   * The cached value of the '{@link #getResults() <em>Results</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResults()
   * @generated
   * @ordered
   */
  protected EList<Results> results;

  /**
   * The cached value of the '{@link #getHeaderJMeter() <em>Header JMeter</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHeaderJMeter()
   * @generated
   * @ordered
   */
  protected HeaderJMeter headerJMeter;

  /**
   * The cached value of the '{@link #getResultsJMeter() <em>Results JMeter</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResultsJMeter()
   * @generated
   * @ordered
   */
  protected EList<Results> resultsJMeter;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ArchitectureResultsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GramaticajmeterPackage.Literals.ARCHITECTURE_RESULTS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getArchitecture()
  {
    return architecture;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setArchitecture(String newArchitecture)
  {
    String oldArchitecture = architecture;
    architecture = newArchitecture;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GramaticajmeterPackage.ARCHITECTURE_RESULTS__ARCHITECTURE, oldArchitecture, architecture));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Header getHeader()
  {
    return header;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetHeader(Header newHeader, NotificationChain msgs)
  {
    Header oldHeader = header;
    header = newHeader;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GramaticajmeterPackage.ARCHITECTURE_RESULTS__HEADER, oldHeader, newHeader);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHeader(Header newHeader)
  {
    if (newHeader != header)
    {
      NotificationChain msgs = null;
      if (header != null)
        msgs = ((InternalEObject)header).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GramaticajmeterPackage.ARCHITECTURE_RESULTS__HEADER, null, msgs);
      if (newHeader != null)
        msgs = ((InternalEObject)newHeader).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GramaticajmeterPackage.ARCHITECTURE_RESULTS__HEADER, null, msgs);
      msgs = basicSetHeader(newHeader, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GramaticajmeterPackage.ARCHITECTURE_RESULTS__HEADER, newHeader, newHeader));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Results> getResults()
  {
    if (results == null)
    {
      results = new EObjectContainmentEList<Results>(Results.class, this, GramaticajmeterPackage.ARCHITECTURE_RESULTS__RESULTS);
    }
    return results;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HeaderJMeter getHeaderJMeter()
  {
    return headerJMeter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetHeaderJMeter(HeaderJMeter newHeaderJMeter, NotificationChain msgs)
  {
    HeaderJMeter oldHeaderJMeter = headerJMeter;
    headerJMeter = newHeaderJMeter;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GramaticajmeterPackage.ARCHITECTURE_RESULTS__HEADER_JMETER, oldHeaderJMeter, newHeaderJMeter);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHeaderJMeter(HeaderJMeter newHeaderJMeter)
  {
    if (newHeaderJMeter != headerJMeter)
    {
      NotificationChain msgs = null;
      if (headerJMeter != null)
        msgs = ((InternalEObject)headerJMeter).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GramaticajmeterPackage.ARCHITECTURE_RESULTS__HEADER_JMETER, null, msgs);
      if (newHeaderJMeter != null)
        msgs = ((InternalEObject)newHeaderJMeter).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GramaticajmeterPackage.ARCHITECTURE_RESULTS__HEADER_JMETER, null, msgs);
      msgs = basicSetHeaderJMeter(newHeaderJMeter, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GramaticajmeterPackage.ARCHITECTURE_RESULTS__HEADER_JMETER, newHeaderJMeter, newHeaderJMeter));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Results> getResultsJMeter()
  {
    if (resultsJMeter == null)
    {
      resultsJMeter = new EObjectContainmentEList<Results>(Results.class, this, GramaticajmeterPackage.ARCHITECTURE_RESULTS__RESULTS_JMETER);
    }
    return resultsJMeter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__HEADER:
        return basicSetHeader(null, msgs);
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__RESULTS:
        return ((InternalEList<?>)getResults()).basicRemove(otherEnd, msgs);
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__HEADER_JMETER:
        return basicSetHeaderJMeter(null, msgs);
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__RESULTS_JMETER:
        return ((InternalEList<?>)getResultsJMeter()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__ARCHITECTURE:
        return getArchitecture();
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__HEADER:
        return getHeader();
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__RESULTS:
        return getResults();
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__HEADER_JMETER:
        return getHeaderJMeter();
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__RESULTS_JMETER:
        return getResultsJMeter();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__ARCHITECTURE:
        setArchitecture((String)newValue);
        return;
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__HEADER:
        setHeader((Header)newValue);
        return;
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__RESULTS:
        getResults().clear();
        getResults().addAll((Collection<? extends Results>)newValue);
        return;
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__HEADER_JMETER:
        setHeaderJMeter((HeaderJMeter)newValue);
        return;
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__RESULTS_JMETER:
        getResultsJMeter().clear();
        getResultsJMeter().addAll((Collection<? extends Results>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__ARCHITECTURE:
        setArchitecture(ARCHITECTURE_EDEFAULT);
        return;
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__HEADER:
        setHeader((Header)null);
        return;
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__RESULTS:
        getResults().clear();
        return;
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__HEADER_JMETER:
        setHeaderJMeter((HeaderJMeter)null);
        return;
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__RESULTS_JMETER:
        getResultsJMeter().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__ARCHITECTURE:
        return ARCHITECTURE_EDEFAULT == null ? architecture != null : !ARCHITECTURE_EDEFAULT.equals(architecture);
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__HEADER:
        return header != null;
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__RESULTS:
        return results != null && !results.isEmpty();
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__HEADER_JMETER:
        return headerJMeter != null;
      case GramaticajmeterPackage.ARCHITECTURE_RESULTS__RESULTS_JMETER:
        return resultsJMeter != null && !resultsJMeter.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (architecture: ");
    result.append(architecture);
    result.append(')');
    return result.toString();
  }

} //ArchitectureResultsImpl
