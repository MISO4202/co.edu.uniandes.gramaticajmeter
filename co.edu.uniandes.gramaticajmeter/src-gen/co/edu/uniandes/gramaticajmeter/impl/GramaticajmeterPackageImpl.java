/**
 * generated by Xtext 2.9.1
 */
package co.edu.uniandes.gramaticajmeter.impl;

import co.edu.uniandes.gramaticajmeter.ArchitectureResults;
import co.edu.uniandes.gramaticajmeter.GramaticajmeterFactory;
import co.edu.uniandes.gramaticajmeter.GramaticajmeterPackage;
import co.edu.uniandes.gramaticajmeter.Header;
import co.edu.uniandes.gramaticajmeter.HeaderJMeter;
import co.edu.uniandes.gramaticajmeter.JMeter;
import co.edu.uniandes.gramaticajmeter.Result;
import co.edu.uniandes.gramaticajmeter.Results;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class GramaticajmeterPackageImpl extends EPackageImpl implements GramaticajmeterPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass jMeterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass architectureResultsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass headerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass resultsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass resultEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass headerJMeterEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see co.edu.uniandes.gramaticajmeter.GramaticajmeterPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private GramaticajmeterPackageImpl()
  {
    super(eNS_URI, GramaticajmeterFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link GramaticajmeterPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static GramaticajmeterPackage init()
  {
    if (isInited) return (GramaticajmeterPackage)EPackage.Registry.INSTANCE.getEPackage(GramaticajmeterPackage.eNS_URI);

    // Obtain or create and register package
    GramaticajmeterPackageImpl theGramaticajmeterPackage = (GramaticajmeterPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof GramaticajmeterPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new GramaticajmeterPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theGramaticajmeterPackage.createPackageContents();

    // Initialize created meta-data
    theGramaticajmeterPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theGramaticajmeterPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(GramaticajmeterPackage.eNS_URI, theGramaticajmeterPackage);
    return theGramaticajmeterPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getJMeter()
  {
    return jMeterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getJMeter_ArchitectureResults()
  {
    return (EReference)jMeterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getArchitectureResults()
  {
    return architectureResultsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getArchitectureResults_Architecture()
  {
    return (EAttribute)architectureResultsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getArchitectureResults_Header()
  {
    return (EReference)architectureResultsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getArchitectureResults_Results()
  {
    return (EReference)architectureResultsEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getArchitectureResults_HeaderJMeter()
  {
    return (EReference)architectureResultsEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getArchitectureResults_ResultsJMeter()
  {
    return (EReference)architectureResultsEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getHeader()
  {
    return headerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getHeader_Header()
  {
    return (EAttribute)headerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getResults()
  {
    return resultsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getResults_Result()
  {
    return (EReference)resultsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getResult()
  {
    return resultEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getResult_Value()
  {
    return (EAttribute)resultEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getHeaderJMeter()
  {
    return headerJMeterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getHeaderJMeter_Header()
  {
    return (EAttribute)headerJMeterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GramaticajmeterFactory getGramaticajmeterFactory()
  {
    return (GramaticajmeterFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    jMeterEClass = createEClass(JMETER);
    createEReference(jMeterEClass, JMETER__ARCHITECTURE_RESULTS);

    architectureResultsEClass = createEClass(ARCHITECTURE_RESULTS);
    createEAttribute(architectureResultsEClass, ARCHITECTURE_RESULTS__ARCHITECTURE);
    createEReference(architectureResultsEClass, ARCHITECTURE_RESULTS__HEADER);
    createEReference(architectureResultsEClass, ARCHITECTURE_RESULTS__RESULTS);
    createEReference(architectureResultsEClass, ARCHITECTURE_RESULTS__HEADER_JMETER);
    createEReference(architectureResultsEClass, ARCHITECTURE_RESULTS__RESULTS_JMETER);

    headerEClass = createEClass(HEADER);
    createEAttribute(headerEClass, HEADER__HEADER);

    resultsEClass = createEClass(RESULTS);
    createEReference(resultsEClass, RESULTS__RESULT);

    resultEClass = createEClass(RESULT);
    createEAttribute(resultEClass, RESULT__VALUE);

    headerJMeterEClass = createEClass(HEADER_JMETER);
    createEAttribute(headerJMeterEClass, HEADER_JMETER__HEADER);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes

    // Initialize classes and features; add operations and parameters
    initEClass(jMeterEClass, JMeter.class, "JMeter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getJMeter_ArchitectureResults(), this.getArchitectureResults(), null, "architectureResults", null, 0, -1, JMeter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(architectureResultsEClass, ArchitectureResults.class, "ArchitectureResults", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getArchitectureResults_Architecture(), ecorePackage.getEString(), "architecture", null, 0, 1, ArchitectureResults.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArchitectureResults_Header(), this.getHeader(), null, "header", null, 0, 1, ArchitectureResults.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArchitectureResults_Results(), this.getResults(), null, "results", null, 0, -1, ArchitectureResults.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArchitectureResults_HeaderJMeter(), this.getHeaderJMeter(), null, "headerJMeter", null, 0, 1, ArchitectureResults.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArchitectureResults_ResultsJMeter(), this.getResults(), null, "resultsJMeter", null, 0, -1, ArchitectureResults.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(headerEClass, Header.class, "Header", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getHeader_Header(), ecorePackage.getEString(), "header", null, 0, -1, Header.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(resultsEClass, Results.class, "Results", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getResults_Result(), this.getResult(), null, "result", null, 0, -1, Results.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(resultEClass, Result.class, "Result", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getResult_Value(), ecorePackage.getEString(), "value", null, 0, 1, Result.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(headerJMeterEClass, HeaderJMeter.class, "HeaderJMeter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getHeaderJMeter_Header(), ecorePackage.getEString(), "header", null, 0, -1, HeaderJMeter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //GramaticajmeterPackageImpl
